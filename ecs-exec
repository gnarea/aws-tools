#!/bin/bash
. "$(dirname $BASH_SOURCE)/_bootstrap.sh"


# ===== Constants and functions


function get_id_for_random_instance_in_ecs_cluster {
    local ecs_cluster_name="$1"

    local ecs_instance_arns="$(
        get_arns_for_instances_in_ecs_cluster "${ecs_cluster_name}"
    )"

    aws ecs describe-container-instances \
        --cluster "${ecs_cluster_name}" \
        --container-instances ${ecs_instance_arns} \
        --query "containerInstances[? status == 'ACTIVE'].ec2InstanceId | [0]" \
        --output text
}


function get_arns_for_instances_in_ecs_cluster {
    local ecs_cluster_name="$1"

    aws ecs list-container-instances \
        --cluster "${ecs_cluster_name}" \
        --query "containerInstanceArns" \
        --output text
}


# ===== Main


if [[ $# < 1 ]]; then
    error_out \
        1 \
        "Usage: ${0##*/} CLUSTER_NAME CONTAINER_NAME COMMAND [COMMAND_ARGS...]"
fi
CLUSTER_NAME="$1"
CONTAINER_NAME="$2"
CONTAINER_COMMAND="${@:3}"

INSTANCE_ID="$(get_id_for_random_instance_in_ecs_cluster "${CLUSTER_NAME}")"
CONTAINER_FILTER="label=com.amazonaws.ecs.container-name=${CONTAINER_NAME}"

exec ec2-ssh "${INSTANCE_ID}" bash <<EOF
CONTAINER_ID="\$(docker ps --filter '${CONTAINER_FILTER}' -q)"
if [[ "\${CONTAINER_ID}" ]]; then
    docker exec "\${CONTAINER_ID}" ${CONTAINER_COMMAND}
else
    echo "Container '${CONTAINER_NAME}' not found" 2>&1
    exit 2
fi
EOF
